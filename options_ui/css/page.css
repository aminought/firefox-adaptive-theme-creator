html {
  --background-color: #f0f0f4; /* light 20 */
  --color: #42414d; /* dark 30 */
  --radius: 4px;
  --option-height: 24px;
  --font-family: monospace;
  --body-width: 500px;
}

body {
  display: flex;
  flex-direction: column;
  gap: 8px;
  padding: 4px;
  background-color: var(--background-color);
  color: var(--color);
  position: relative;
  font-family: var(--font-family);
  max-width: var(--body-width);
}

.title {
  font-weight: bold;
  font-size: 1.5em;
}

.options_col {
  display: flex;
  flex-direction: column;
  justify-content: center;
  gap: 8px;
}

.options_row {
  display: flex;
  flex-direction: row;
  justify-content: center;
  gap: 8px;
  width: 100%;
}

.options_row.wrap {
  flex-wrap: wrap;
}

.options_group {
  display: flex;
  flex-direction: column;
  gap: 4px;
}

.options_group_wrapper {
  display: flex;
  flex-direction: column;
  gap: 4px;
  border-radius: var(--radius);
  border: 1px solid;
  padding: 4px;
}

.options_group_title {
  align-self: center;
  margin: 0px;
  text-wrap: nowrap;
  font-weight: bold;
}

.option {
  display: flex;
  flex-direction: row;
  align-items: center;
  border-radius: var(--radius);
  border: 1px solid;
  height: var(--option-height);
}

.options_row:has(#source[data-value="own_color"]) > .option_algo_not_own_color {
  display: none;
}

.options_row:not(:has(#source[data-value="own_color"]))
  > .option_source_own_color {
  display: none;
}

.option label {
  white-space: nowrap;
  padding: 0 4px 0 4px;
  margin-right: auto;
}

.option .separator {
  height: var(--option-height);
  border-left: 1px solid color-mix(in srgb, currentColor 50%, transparent);
}

.footer {
  display: flex;
  justify-content: flex-end;
  gap: 4px;
}

.footer button {
  background-color: color-mix(in srgb, currentColor 13%, transparent);
  color: var(--color);
  border: 1px solid;
  border-radius: var(--radius);
  padding: 4px 8px;
  font-family: var(--font-family);
  font-weight: bold;
}

.footer button:hover {
  background-color: color-mix(in srgb, currentColor 17%, transparent);
}

.option select {
  background-color: color-mix(in srgb, currentColor 13%, transparent);
  color: var(--color);
  border-radius: 0 var(--radius) var(--radius) 0;
  border: none;
  padding: 2px 0 2px 8px;
  height: 100%;
  overflow: hidden;
  font-family: var(--font-family);
}

.option select:hover {
  background-color: color-mix(in srgb, currentColor 17%, transparent);
}

.option select > option {
  background-color: var(--background-color);
  color: var(--color);
  font-family: var(--font-family);
}

.option select > option:hover {
  background-color: color-mix(in srgb, currentColor 17%, transparent);
}

.option .color_preview {
  border-radius: 0 var(--radius) var(--radius) 0;
  height: 100%;
  aspect-ratio: 1 / 1;
}

.option input {
  height: var(--option-height);
  border-radius: 0 var(--radius) var(--radius) 0;
  border: none;
  background-color: color-mix(in srgb, currentColor 13%, transparent);
  color: var(--color);
  font-family: var(--font-family);
}

.option input[type="number"] {
  -moz-appearance: textfield;
  appearance: textfield;
  width: 3em;
  margin: 0;
  text-align: center;
}

.option input:hover {
  background-color: color-mix(in srgb, currentColor 17%, transparent);
}

.option input:focus {
  outline: none;
}

/* Hide all options if disabled */

body:has(#global_enabled[data-value="false"]) {
  #global_foreground_options,
  #global_background_options,
  #global_triggers_options,
  #global_favicon_options,
  #global_page_options {
    display: none;
  }
}

/* Hide global foreground options if source is auto */

body:has(#global_foreground_source[data-value="AUTO"]) {
  #global_foreground_color,
  #global_foreground_saturation_limit,
  #global_foreground_darkness,
  #global_foreground_brightness {
    display: none;
  }
}

/* Hide global options if source is color */

body:has(#global_background_source[data-value="COLOR"]) {
  #global_background_saturation_limit,
  #global_background_darkness,
  #global_background_brightness {
    display: none;
  }
}

body:has(#global_foreground_source[data-value="COLOR"]) {
  #global_foreground_saturation_limit,
  #global_foreground_darkness,
  #global_foreground_brightness {
    display: none;
  }
}

/* Hide global color option if source is not color */

body:not(:has(#global_background_source[data-value="COLOR"])) {
  #global_background_color {
    display: none;
  }
}

body:not(:has(#global_foreground_source[data-value="COLOR"])) {
  #global_foreground_color {
    display: none;
  }
}
